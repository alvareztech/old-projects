package a3d;

import java.net.MalformedURLException;
import java.net.URL;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultListModel;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import twitter4j.DirectMessage;
import twitter4j.IDs;
import twitter4j.ProfileImage;
import twitter4j.Status;
import twitter4j.Twitter;
import twitter4j.TwitterException;
import twitter4j.User;

/**
 *
 * @author Daniel
 */
public class VentanaPrincipal extends javax.swing.JFrame {

    private Twitter twitter;
    private DefaultListModel modelo;

    public VentanaPrincipal(Twitter twitter) {
        initComponents();
        this.twitter = twitter;
        setLocationRelativeTo(null);
        modelo = new DefaultListModel();
        listaEstadoSeguidos.setModel(modelo);
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnPublicar = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtEstado = new javax.swing.JTextArea();
        jScrollPane2 = new javax.swing.JScrollPane();
        listaEstadoSeguidos = new javax.swing.JList();
        lblImagen = new javax.swing.JLabel();
        btnEnviarSeguidores = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        lblContador = new javax.swing.JLabel();
        mostrarMisPublicaciones = new javax.swing.JButton();
        btnMostrarSeguidores = new javax.swing.JButton();
        btnMostrarALosQueSigo = new javax.swing.JButton();
        btnLasPublicaciones = new javax.swing.JButton();
        btnCreditos = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("MiTwitter");
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        btnPublicar.setText("Publicar");
        btnPublicar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPublicarActionPerformed(evt);
            }
        });

        txtEstado.setColumns(20);
        txtEstado.setRows(2);
        txtEstado.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtEstadoKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtEstadoKeyReleased(evt);
            }
        });
        jScrollPane1.setViewportView(txtEstado);

        listaEstadoSeguidos.setModel(new javax.swing.AbstractListModel() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public Object getElementAt(int i) { return strings[i]; }
        });
        jScrollPane2.setViewportView(listaEstadoSeguidos);

        lblImagen.setText("imagen");
        lblImagen.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        lblImagen.setMaximumSize(new java.awt.Dimension(48, 48));
        lblImagen.setMinimumSize(new java.awt.Dimension(48, 48));
        lblImagen.setPreferredSize(new java.awt.Dimension(48, 48));

        btnEnviarSeguidores.setText("Enviar A Todos");
        btnEnviarSeguidores.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEnviarSeguidoresActionPerformed(evt);
            }
        });

        jButton1.setText("Enviar A Seguidores ");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Enviar A Los Que Sigo ");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        lblContador.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblContador.setText("140");

        mostrarMisPublicaciones.setText("Mis Publicaciones");
        mostrarMisPublicaciones.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mostrarMisPublicacionesActionPerformed(evt);
            }
        });

        btnMostrarSeguidores.setText("Mostrar Seguidores");
        btnMostrarSeguidores.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMostrarSeguidoresActionPerformed(evt);
            }
        });

        btnMostrarALosQueSigo.setText("Mostrar A Los Que Siguo");
        btnMostrarALosQueSigo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMostrarALosQueSigoActionPerformed(evt);
            }
        });

        btnLasPublicaciones.setText("Las Publicaciones");
        btnLasPublicaciones.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLasPublicacionesActionPerformed(evt);
            }
        });

        btnCreditos.setText("!");
        btnCreditos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCreditosActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 565, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(lblContador, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(lblImagen, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(btnPublicar)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnEnviarSeguidores)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButton1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButton2, javax.swing.GroupLayout.DEFAULT_SIZE, 190, Short.MAX_VALUE))
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 513, Short.MAX_VALUE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addComponent(btnLasPublicaciones)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(mostrarMisPublicaciones)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnMostrarSeguidores)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnMostrarALosQueSigo)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnCreditos)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 48, Short.MAX_VALUE)
                    .addComponent(lblImagen, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(8, 8, 8)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnPublicar)
                    .addComponent(btnEnviarSeguidores)
                    .addComponent(jButton1)
                    .addComponent(jButton2)
                    .addComponent(lblContador))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 246, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnMostrarALosQueSigo)
                    .addComponent(btnLasPublicaciones)
                    .addComponent(mostrarMisPublicaciones)
                    .addComponent(btnMostrarSeguidores)
                    .addComponent(btnCreditos))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnPublicarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPublicarActionPerformed
        try {
            if (txtEstado.getText().length() > 0) {
                Status status = twitter.updateStatus(txtEstado.getText());
            } else {
                JOptionPane.showMessageDialog(this, "No Tiene Ningun Caracter Su Publicación", "Error", JOptionPane.ERROR_MESSAGE);
            }

        } catch (TwitterException ex) {
        }
        txtEstado.setText("");
        actualizarContador();
    }//GEN-LAST:event_btnPublicarActionPerformed

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        try {

            ProfileImage image = twitter.getProfileImage(twitter.getScreenName(), ProfileImage.NORMAL);
            lblImagen.setText("");
            try {
                lblImagen.setIcon(new ImageIcon(new URL(image.getURL())));
            } catch (MalformedURLException ex) {
                Logger.getLogger(VentanaPrincipal.class.getName()).log(Level.SEVERE, null, ex);
            }

            List<Status> statuses = twitter.getFriendsTimeline();
            for (Status status : statuses) {
                modelo.addElement(status.getUser().getScreenName() + ":  " + status.getText());
            }
        } catch (TwitterException ex) {
        }
    }//GEN-LAST:event_formWindowOpened

    private void txtEstadoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtEstadoKeyPressed
        actualizarContador();
    }//GEN-LAST:event_txtEstadoKeyPressed

    public void actualizarContador() {
        String x = txtEstado.getText();
        int c = 140 - x.length();
        lblContador.setText(c + "");
    }

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        try {
            if (txtEstado.getText().length() > 0) {
                long cursor = -1;
                IDs ids;
                do {
                    ids = twitter.getFollowersIDs(twitter.getScreenName(), cursor);
                    for (long id : ids.getIDs()) {
                        User user = twitter.showUser(id);
                        DirectMessage message = twitter.sendDirectMessage(user.getScreenName(), txtEstado.getText());
                    }
                } while ((cursor = ids.getNextCursor()) != 0);
            } else {
                JOptionPane.showMessageDialog(this, "No Tiene Ningun Caracter Su Mensaje", "Error", JOptionPane.ERROR_MESSAGE);
            }

        } catch (Exception ex) {
        }
        txtEstado.setText("");
        actualizarContador();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        try {
            if (txtEstado.getText().length() > 0) {
                long cursor = -1;
                IDs ids;
                do {
                    ids = twitter.getFriendsIDs(twitter.getScreenName(), cursor);
                    for (long id : ids.getIDs()) {
                        User user = twitter.showUser(id);
                        DirectMessage message = twitter.sendDirectMessage(user.getScreenName(), txtEstado.getText());
                    }
                } while ((cursor = ids.getNextCursor()) != 0);
            } else {
                JOptionPane.showMessageDialog(this, "No Tiene Ningun Caracter Su Mensaje", "Error", JOptionPane.ERROR_MESSAGE);
            }

        } catch (Exception ex) {
        }
        txtEstado.setText("");
        actualizarContador();
    }//GEN-LAST:event_jButton2ActionPerformed

    private void btnEnviarSeguidoresActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEnviarSeguidoresActionPerformed
        try {
            if (txtEstado.getText().length() > 0) {
                long cursor = -1;
                IDs ids;
                do {
                    ids = twitter.getFriendsIDs(twitter.getScreenName(), cursor);
                    for (long id : ids.getIDs()) {
                        User user = twitter.showUser(id);
                        DirectMessage message = twitter.sendDirectMessage(user.getScreenName(), txtEstado.getText());
                    }
                } while ((cursor = ids.getNextCursor()) != 0);

                cursor = -1;
                IDs ids2;
                do {
                    ids2 = twitter.getFollowersIDs(twitter.getScreenName(), cursor);
                    for (long id : ids2.getIDs()) {
                        User user = twitter.showUser(id);
                        DirectMessage message = twitter.sendDirectMessage(user.getScreenName(), txtEstado.getText());
                    }
                } while ((cursor = ids2.getNextCursor()) != 0);
            } else {
                JOptionPane.showMessageDialog(this, "No Tiene Ningun Caracter Su Mensaje", "Error", JOptionPane.ERROR_MESSAGE);
            }

        } catch (Exception ex) {
        }
        txtEstado.setText("");
        actualizarContador();
    }//GEN-LAST:event_btnEnviarSeguidoresActionPerformed

    private void btnMostrarSeguidoresActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMostrarSeguidoresActionPerformed
        try {
            modelo.clear();
            long cursor = -1;
            IDs ids;
            do {
                ids = twitter.getFollowersIDs(twitter.getScreenName(), cursor);
                for (long id : ids.getIDs()) {
                    User user = twitter.showUser(id);
                    modelo.addElement("" + user.getScreenName() + ": " + user.getName() + " \"" + user.getDescription() + "\"");
                }
            } while ((cursor = ids.getNextCursor()) != 0);
        } catch (Exception ex) {
        }
    }//GEN-LAST:event_btnMostrarSeguidoresActionPerformed

    private void btnMostrarALosQueSigoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMostrarALosQueSigoActionPerformed
        try {
            modelo.clear();
            long cursor = -1;
            IDs ids;
            do {
                ids = twitter.getFriendsIDs(twitter.getScreenName(), cursor);
                for (long id : ids.getIDs()) {
                    User user = twitter.showUser(id);
                    modelo.addElement("" + user.getScreenName() + ": " + user.getName() + " \"" + user.getDescription() + "\"");
                }
            } while ((cursor = ids.getNextCursor()) != 0);
        } catch (Exception ex) {
        }
    }//GEN-LAST:event_btnMostrarALosQueSigoActionPerformed

    private void mostrarMisPublicacionesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mostrarMisPublicacionesActionPerformed
        try {
            modelo.clear();
            List<Status> statuses = twitter.getUserTimeline();
            for (Status status : statuses) {
                modelo.addElement(status.getUser().getScreenName() + ":  " + status.getText());
            }
        } catch (Exception ex) {
        }
    }//GEN-LAST:event_mostrarMisPublicacionesActionPerformed

    private void btnLasPublicacionesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLasPublicacionesActionPerformed
        try {
            modelo.clear();
            List<Status> statuses = twitter.getFriendsTimeline();
            for (Status status : statuses) {
                modelo.addElement(status.getUser().getScreenName() + ":  " + status.getText());
            }
        } catch (Exception ex) {
        }
    }//GEN-LAST:event_btnLasPublicacionesActionPerformed

    private void txtEstadoKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtEstadoKeyReleased
        actualizarContador();
    }//GEN-LAST:event_txtEstadoKeyReleased

    private void btnCreditosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCreditosActionPerformed
        JOptionPane.showMessageDialog(this, "Daniel Alvarez (a3dany)", "Desarrollador", JOptionPane.INFORMATION_MESSAGE);
    }//GEN-LAST:event_btnCreditosActionPerformed
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCreditos;
    private javax.swing.JButton btnEnviarSeguidores;
    private javax.swing.JButton btnLasPublicaciones;
    private javax.swing.JButton btnMostrarALosQueSigo;
    private javax.swing.JButton btnMostrarSeguidores;
    private javax.swing.JButton btnPublicar;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel lblContador;
    private javax.swing.JLabel lblImagen;
    private javax.swing.JList listaEstadoSeguidos;
    private javax.swing.JButton mostrarMisPublicaciones;
    private javax.swing.JTextArea txtEstado;
    // End of variables declaration//GEN-END:variables
}
